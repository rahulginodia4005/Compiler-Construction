
%Test Case 4: Syntactically correct testcase
%Following program computes an arithmetic expression 

% The following function computes the function value for the given inputs 
_computeFunctionValue input parameter list[int c3, int c4, int c5]
output parameter list [real c6];
	type real : d4cbcd5677;
	type real : c4bbb;
	c6 <--- 5000.79;
	d4cbcd5677<--- ((c3 + 2*c4)-(c5-5))/ 4;
	c4bbb <--- ((d4cbcd5677- 2.35)*(2345-234*8))+5*c3;
	if((~(c4bbb == 0)) &&& (c4bbb > 78.56)) 
	then
		c6<--- d4cbcd5677/c4bbb;
	else
		write(c4bbb);
	endif

	return [c6];
end

_myFunction123 input parameter list[int c7, real d2, real c3, int d4]
output parameter list [real c5, #newtype d6];
	record #marks
		type #int : gettan;
		type #fbdbs: pfbn;
		type #fngd: chevnsonSV;
	endrecord
	type int : d4cbcd5677;
	type real : c4bbb;
	c6 <--- 5000.79;
	d4cbcd5677 <--- ((c3 + 2*c4)-(c5-5))/ 4;
	while(d7cbc>10)
		b4dd <--- (4+5.55E+10);
		b2 <--- b5c;
		if(~((b4 >= c5) &&& (~((b4 >= c5) &&& (c4bd55==d4cc)))))
		then
			while(d5.b != d4cc)
				b4dd <--- ((c3cc*3.44 - d4) - (c5dd-5))*4.45E-45;
			endwhile
		endif
	endwhile
	return [c5, d6];
end

_sumN  input parameter list [int d5cc34]  
output parameter list[real d3];
	type int : b5b567;
	b5b567 <--- 1;
	d3 <--- 0.00;
	while ( b5b567 <= d5cc34)
		read( c3bd);
		d3 <--- d3 + c3bd;
		b5b567 <--- b5b567 + 1;
	endwhile
	return [d3];
end

_computeFunctionValue input parameter list[int c3, int c4, int c5]
output parameter list [real c6];
	type real : d4cbcd5677;
	type real : c4bbb;
	c6 <--- 5000.79;
	d4cbcd5677<--- ((c3 + 2*c4)-(c5-5))/ 4;
	c4bbb <--- ((d4cbcd5677- 2.35)*(2345-234*8))+5*c3;
	if((~(c4bbb == 0)) &&& (c4bbb > 78.56)) 
	then
		c6<--- d4cbcd5677/c4bbb;
	else
		write(c4bbb);
	endif

	return [c6];
end

_readMarks input parameter list[int b7]
output parameter list [ record #marks b3c45];
	read(b3c45.maths);
	read(b3c45.physics);
	read(b3c45.chemistry);
	return [b3c45];
end

_sumN  input parameter list [int d5cc34]  
output parameter list[real d3];
	type int : b5b567;
	b5b567 <--- 1;
	d3 <--- 0.00;
	while ( b5b567 <= d5cc34)
		read( c3bd);
		d3 <--- d3 + c3bd;
		b5b567 <--- b5b567 + 1;
	endwhile
	return [d3];
end


_sumN  input parameter list [int d5cc34]  
output parameter list[real d3];
	type int : b5b567;
	b5b567 <--- 1;
	d3 <--- 0.00;
	while ( b5b567 <= d5cc34)
		read( c3bd);
		d3 <--- d3 + c3bd;
		b5b567 <--- b5b567 + 1;
	endwhile
	return [d3];
end


_sumN  input parameter list [int d5cc34]  
output parameter list[real d3];
	type int : b5b567;
	b5b567 <--- 1;
	d3 <--- 0.00;
	while ( b5b567 <= d5cc34)
		read( c3bd);
		d3 <--- d3 + c3bd;
		b5b567 <--- b5b567 + 1;
	endwhile
	return [d3];
end


_sumN  input parameter list [int d5cc34]  
output parameter list[real d3];
	type int : b5b567;
	b5b567 <--- 1;
	d3 <--- 0.00;
	while ( b5b567 <= d5cc34)
		read( c3bd);
		d3 <--- d3 + c3bd;
		b5b567 <--- b5b567 + 1;
	endwhile
	return [d3];
end

_computeFunctionValue input parameter list[int c3, int c4, int c5]
output parameter list [real c6];
	type real : d4cbcd5677;
	type real : c4bbb;
	c6 <--- 5000.79;
	d4cbcd5677<--- ((c3 + 2*c4)-(c5-5))/ 4;
	c4bbb <--- ((d4cbcd5677- 2.35)*(2345-234*8))+5*c3;
	if((~(c4bbb == 0)) &&& (c4bbb > 78.56)) 
	then
		c6<--- d4cbcd5677/c4bbb;
	else
		write(c4bbb);
	endif

	return [c6];
end

%The following program computes the function value for the user defined input
_main 
	type int : b5;
	type int : d5cb34567;
	type int :  b3b444 : global;
	type real: c3;
	b5 <--- 1;
	read(d5cb34567);
	read(b3b444);

	[c3] <--- call _computeFunctionValue with parameters [b5, d5cb34567, b3b444];
	write(c3);
	return;
end